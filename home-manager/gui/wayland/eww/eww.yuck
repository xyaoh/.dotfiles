;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Variables
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(deflisten _CURRENTWORKSPACEID :initial `1`
  `./scripts/currentworkspaceid.sh`)
(deflisten _ACTIVEWORKSPACES :initial `{}`
  `./scripts/activeworkspaces.sh`)
(deflisten _NETWORK :initial `{"status":"disconnected","ssid":""}`
  `./scripts/network.sh`)
(deflisten _VOLUME :initial `{"sink":{"left":0,"right":0,"mute":"yes"},
                              "source":{"left":0,"right":0,"mute":"yes"}}`
  `./scripts/volume.sh`)
(defpoll _DATE :interval `1s`
  `date "+%a %d %b"`)
(defpoll _TIME-HOUR :interval `1s`
  `date "+%I"`)
(defpoll _TIME-HOUR-MERIDIEM :interval `1s`
  `date "+%p"`)
(defpoll _TIME-MINUTE :interval `1s`
  `date "+%M"`)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Windows
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defwindow statusbar :monitor 0
                     :geometry (geometry :x "0%"
                                         :y "0%"
                                         :width "32px"
                                         :height "100%"
                                         :anchor "left center")
                     :stacking "fg"
                     :exclusive true
                     :focusable false
                     :namespace "statusbar"
  (statusbar))

(defwindow popupbar :monitor 0
                     :geometry (geometry :x "0%"
                                         :y "0%"
                                         :width "32px"
                                         :height "100%"
                                         :anchor "left bottom")
                     :stacking "fg"
                     :exclusive false
                     :focusable false
                     :namespace "statusbar"
  (statusbar))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Widgets
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defwidget statusbar []
  (centerbox :class "bar"
             :orientation "v"
             :valign "fill"
             :halign "center"
    (left)
    (middle) 
    (right)))


(defwidget left []
  (box :class "left"
       :orientation "v"
       :space-evenly false
       :valign "start"
       :halign "center"
       :spacing 10
    (workspaces)))

(defwidget middle []
  (box :class "middle"
       :orientation "v"
       :space-evenly false
       :valign "center"
       :halign "center"
       :spacing 10
    ""))

(defwidget right []
  (box :class "right"
       :orientation "v"
       :space-evenly false
       :valign "end"
       :halign "center"
       :spacing 25
    (tray)
    (time)))


(defwidget workspaces []
  (box :class "workspaces"
       :orientation "v"
       :space-evenly true
       :valign "center"
       :halign "center"
    (workspace :id "1")
    (workspace :id "2")
    (workspace :id "3")
    (workspace :id "4")
    (workspace :id "5")
    (workspace :id "6")
    (workspace :id "7")
    (workspace :id "8")
    (workspace :id "9")))

(defwidget workspace [id]
  (box :class "workspace \
               ${id == _CURRENTWORKSPACEID ? 'currentworkspace' : ''} \
               ${_ACTIVEWORKSPACES?.[id] != "null" ? 'activeworkspace' : ''}"
       :orientation "v"
       :height 40
       :width 32
    (button :onclick "hyprctl dispatch workspace ${id}" id)))


(defwidget tray []
  (box :class "systray"
       :orientation "v"
       :space-evenly false
       :valign "center"
       :halign "center"
       :spacing 1
    (network-widget :network {_NETWORK})
    (cpu-widget :cpu {EWW_CPU})
    (ram-widget :ram {EWW_RAM})
    (volume-widget :volume {_VOLUME})
    (battery-widget :battery {EWW_BATTERY})))

(defwidget network-widget [network]
  (box :class "widget network-widget"
       :orientation "v"
       :height 50
       :width 32
       :spacing -14
    (label :xalign 0
           :text "net")
    (separator)
    (label :xalign 1
           :text  {network.status == "connected" ? "++" : "--"})))

(defwidget cpu-widget [cpu]
  (box :class "widget cpu-widget"
       :orientation "v"
       :height 50
       :width 32
       :spacing -14
    (label :xalign 0
           :text "cpu")
    (separator)
    (label :xalign 1
           :text  "${round(cpu.avg, 0)}")))

(defwidget ram-widget [ram]
  (box :class "widget ram-widget"
       :orientation "v"
       :height 50
       :width 32
       :spacing -14
    (label :xalign 0
           :text "ram")
    (separator)
    (label :xalign 1
           :text  "${round(ram.used_mem_perc, 0)}")))

(defwidget volume-widget [volume]
  (box :class "widget volume-widget"
       :orientation "v"
       :height 50
       :width 32
       :spacing -14
    (label :xalign 0
           :text "vol")
    (separator)
    (label :xalign 1
           :text "${volume.sink.mute == "yes" ? "¬" : ""}${(volume.sink.left + volume.sink.right) / 2}")))

(defwidget battery-widget [battery]
  (box :class "widget battery-widget"
       :orientation "v"
       :height 50
       :width 32
       :spacing -14
    (label :xalign 0
           :text "bat")
    (separator)
    (label :xalign 1
           :text "${battery.BAT0.status == "Charging" ? "~" : ""}${battery.BAT0.capacity}")))

(defwidget time []
  (box :class "time"
       :orientation "v"
       :height 60
       :width 32
       :spacing -5
    (label :yalign 0.7
           :text "${_TIME-HOUR}:")
    (label :yalign 0.3
           :text ":${_TIME-MINUTE}")
    (label :yalign 0
           :text "${_TIME-HOUR-MERIDIEM}")))

(defwidget separator []
  (box :class "separator"
    (label :angle 90
           :text "⋮")))
